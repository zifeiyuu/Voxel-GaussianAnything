Element 0: {
  
'url': 'https://www.youtube.com/watch?v=MjIQEgKP4Ws', 

'timestamps': tensor([46012633, 46046000, 46079367, 46112733, 46146100, 46179467, 46212833,
        46246200, 46279567, 46312933, 46346300, 46379667, 46413033, 46446400,
        46479767, 46513133, 46546500, 46579867, 46613233, 46646600, 46679967,
        46713333, 46746700, 46780067, 46813433, 46846800, 46880167, 46913533,
        46946900, 46980267, 47013633, 47047000, 47080367, 47113733, 47147100,
        47180467, 47213833, 47247200, 47280567, 47313933, 47347300, 47380667,
        47414033, 47447400, 47480767, 47514133, 47547500, 47580867, 47614233,
        47647600, 47680967, 47714333, 47747700, 47781067, 47814433, 47847800,
        47881167, 47914533, 47947900, 47981267, 48014633, 48048000, 48081367,
        48114733, 48148100, 48181467, 48214833, 48248200, 48281567, 48314933,
        48348300, 48381667, 48415033, 48448400, 48481767, 48515133, 48548500,
        48581867, 48615233, 48648600, 48681967, 48715333, 48748700, 48782067,
        48815433, 48848800, 48882167, 48915533, 48948900, 48982267, 49015633,
        49049000, 49082367, 49115733, 49149100, 49182467, 49215833, 49249200,
        49282567, 49315933, 49349300, 49382667, 49416033, 49449400, 49482767,
        49516133, 49549500, 49582867, 49616233, 49649600, 49682967, 49716333,
        49749700, 49783067, 49816433, 49849800, 49883167, 49916533, 49949900,
        49983267, 50016633, 50050000, 50083367, 50116733, 50150100, 50183467,
        50216833, 50250200, 50283567, 50316933, 50350300, 50383667, 50417033,
        50450400, 50483767, 50517133, 50550500, 50583867, 50617233, 50650600,
        50683967, 50717333, 50750700, 50784067, 50817433, 50850800, 50884167,
        50917533, 50950900, 50984267, 51017633, 51051000, 51084367, 51117733,
        51151100, 51184467, 51217833, 51251200, 51284567, 51317933, 51351300,
        51384667, 51418033, 51451400, 51484767, 51518133, 51551500, 51584867,
        51618233, 51651600, 51684967, 51718333, 51751700, 51785067, 51818433,
        51851800, 51885167, 51918533, 51951900, 51985267, 52018633, 52052000,
        52085367, 52118733, 52152100, 52185467, 52218833, 52252200, 52285567,
        52318933, 52352300, 52385667, 52419033, 52452400, 52485767, 52519133,
        52552500, 52585867, 52619233, 52652600, 52685967, 52719333, 52752700,
        52786067, 52819433, 52852800, 52886167, 52919533, 52952900, 52986267,
        53019633, 53053000, 53086367, 53119733, 53153100, 53186467, 53219833,
        53253200, 53286567, 53319933, 53353300, 53386667, 53420033, 53453400,
        53486767, 53520133, 53553500, 53586867, 53620233, 53653600, 53686967,
        53720333, 53753700, 53787067, 53820433, 53853800, 53887167, 53920533,
        53953900, 53987267, 54020633, 54054000, 54087367, 54120733, 54154100,
        54187467, 54220833, 54254200, 54287567, 54320933, 54354300, 54387667,
        54421033, 54454400, 54487767, 54521133, 54554500, 54587867, 54621233,
        54654600, 54687967, 54721333, 54754700, 54788067, 54821433, 54854800,
        54888167, 54921533, 54954900, 54988267, 55021633, 55055000, 55088367,
        55121733, 55155100, 55188467, 55221833, 55255200, 55288567]), 

'cameras': tensor([[ 0.5829,  1.0362,  0.5000,  ..., -0.0343,  0.9994, -0.1100],
        [ 0.5829,  1.0362,  0.5000,  ..., -0.0354,  0.9994, -0.1230],
        [ 0.5829,  1.0362,  0.5000,  ..., -0.0366,  0.9993, -0.1359],
        ...,
        [ 0.5829,  1.0362,  0.5000,  ..., -0.4991,  0.8665, -2.2156],
        [ 0.5829,  1.0362,  0.5000,  ..., -0.5010,  0.8655, -2.2150],
        [ 0.5829,  1.0362,  0.5000,  ..., -0.5028,  0.8644, -2.2144]]), 

'images': [tensor([255, 216, 255,  ...,  63, 255, 217], dtype=torch.uint8), tensor([255, 216, 255,  ..., 204, 255, 217], dtype=torch.uint8), tensor([255, 216, 255,  ...,  63, 255, 217], dtype=torch.uint8), tensor([255, 216, 255,  ..., 103, 255, 217], dtype=torch.uint8), tensor([255, 216, 255,  ..., 127, 255, 217], dtype=torch.uint8), tensor([255, 216, 255,  ..., 127, 255, 217], dtype=torch.uint8), tensor([255, 216, 255,  ...,   9, 255, 217], dtype=torch.uint8), tensor([255, 216, 255,  ..., 208, 255, 217], dtype=torch.uint8), tensor([255, 216, 255,  ..., 208, 255, 217], dtype=torch.uint8), tensor([255, 216, 255,  ...,   3, 255, 217], dtype=torch.uint8), tensor([255, 216, 255,  ...,  31, 255, 217], dtype=torch.uint8), tensor([255, 216, 255,  ...,   7, 255, 217], dtype=torch.uint8), tensor([255, 216, 255,  ..., 127, 255, 217], dtype=torch.uint8), tensor([255, 216, 255,  ...,  15, 255, 217], dtype=torch.uint8), tensor([255, 216, 255,  ...,  15, 255, 217], dtype=torch.uint8), tensor([255, 216, 255,  ...,  31, 255, 217], dtype=torch.uint8), tensor([255, 216, 255,  ...,   3, 255, 217], dtype=torch.uint8), tensor([255, 216, 255,  ...,   3, 255, 217], dtype=torch.uint8), tensor([255, 216, 255,  ..., 129, 255, 217], dtype=torch.uint8), tensor([255, 216, 255,  ...,  15, 255, 217], dtype=torch.uint8), tensor([255, 216, 255,  ...,   7, 255, 217], dtype=torch.uint8), tensor([255, 216, 255,  ...,   1, 255, 217], dtype=torch.uint8), tensor([255, 216, 255,  ..., 153, 255, 217], dtype=torch.uint8), tensor([255, 216, 255,  ..., 140, 255, 217], dtype=torch.uint8), tensor([255, 216, 255,  ...,  17, 255, 217], dtype=torch.uint8), tensor([255, 216, 255,  ..., 127, 255, 217], dtype=torch.uint8), tensor([255, 216, 255,  ..., 127, 255, 217], dtype=torch.uint8), tensor([255, 216, 255,  ..., 127, 255, 217], dtype=torch.uint8), tensor([255, 216, 255,  ..., 159, 255, 217], dtype=torch.uint8), tensor([255, 216, 255,  ..., 159, 255, 217], dtype=torch.uint8), tensor([255, 216, 255,  ..., 115, 255, 217], dtype=torch.uint8), tensor([255, 216, 255,  ...,  63, 255, 217], dtype=torch.uint8), tensor([255, 216, 255,  ..., 127, 255, 217], dtype=torch.uint8), tensor([255, 216, 255,  ..., 231, 255, 217], dtype=torch.uint8), tensor([255, 216, 255,  ..., 127, 255, 217], dtype=torch.uint8), tensor([255, 216, 255,  ...,  63, 255, 217], dtype=torch.uint8), tensor([255, 216, 255,  ..., 153, 255, 217], dtype=torch.uint8), tensor([255, 216, 255,  ..., 204, 255, 217], dtype=torch.uint8), tensor([255, 216, 255,  ..., 103, 255, 217], dtype=torch.uint8), tensor([255, 216, 255,  ..., 153, 255, 217], dtype=torch.uint8), tensor([255, 216, 255,  ..., 159, 255, 217], dtype=torch.uint8), tensor([255, 216, 255,  ..., 204, 255, 217], dtype=torch.uint8), tensor([255, 216, 255,  ..., 207, 255, 217], dtype=torch.uint8), tensor([255, 216, 255,  ...,  63, 255, 217], dtype=torch.uint8), tensor([255, 216, 255,  ..., 127, 255, 217], dtype=torch.uint8), tensor([255, 216, 255,  ...,  31, 255, 217], dtype=torch.uint8), tensor([255, 216, 255,  ...,   3, 255, 217], dtype=torch.uint8), tensor([255, 216, 255,  ...,   3, 255, 217], dtype=torch.uint8), tensor([255, 216, 255,  ...,  15, 255, 217], dtype=torch.uint8), tensor([255, 216, 255,  ...,  31, 255, 217], dtype=torch.uint8), tensor([255, 216, 255,  ...,   3, 255, 217], dtype=torch.uint8), tensor([255, 216, 255,  ...,   3, 255, 217], dtype=torch.uint8), tensor([255, 216, 255,  ..., 127, 255, 217], dtype=torch.uint8), tensor([255, 216, 255,  ...,  31, 255, 217], dtype=torch.uint8), tensor([255, 216, 255,  ...,   3, 255, 217], dtype=torch.uint8), tensor([255, 216, 255,  ...,   0, 255, 217], dtype=torch.uint8), tensor([255, 216, 255,  ..., 127, 255, 217], dtype=torch.uint8), tensor([255, 216, 255,  ...,  15, 255, 217], dtype=torch.uint8), tensor([255, 216, 255,  ...,  15, 255, 217], dtype=torch.uint8), tensor([255, 216, 255,  ...,   1, 255, 217], dtype=torch.uint8), tensor([255, 216, 255,  ...,  15, 255, 217], dtype=torch.uint8), tensor([255, 216, 255,  ..., 127, 255, 217], dtype=torch.uint8), tensor([255, 216, 255,  ..., 129, 255, 217], dtype=torch.uint8), tensor([255, 216, 255,  ..., 127, 255, 217], dtype=torch.uint8), tensor([255, 216, 255,  ...,  67, 255, 217], dtype=torch.uint8), tensor([255, 216, 255,  ..., 135, 255, 217], dtype=torch.uint8), tensor([255, 216, 255,  ..., 127, 255, 217], dtype=torch.uint8), tensor([255, 216, 255,  ..., 160, 255, 217], dtype=torch.uint8), tensor([255, 216, 255,  ..., 131, 255, 217], dtype=torch.uint8), tensor([255, 216, 255,  ..., 131, 255, 217], dtype=torch.uint8), tensor([255, 216, 255,  ..., 160, 255, 217], dtype=torch.uint8), tensor([255, 216, 255,  ...,  63, 255, 217], dtype=torch.uint8), tensor([255, 216, 255,  ..., 160, 255, 217], dtype=torch.uint8), tensor([255, 216, 255,  ...,   3, 255, 217], dtype=torch.uint8), tensor([255, 216, 255,  ...,  79, 255, 217], dtype=torch.uint8), tensor([255, 216, 255,  ...,  79, 255, 217], dtype=torch.uint8), tensor([255, 216, 255,  ..., 132, 255, 217], dtype=torch.uint8), tensor([255, 216, 255,  ...,  63, 255, 217], dtype=torch.uint8), tensor([255, 216, 255,  ..., 127, 255, 217], dtype=torch.uint8), tensor([255, 216, 255,  ...,  39, 255, 217], dtype=torch.uint8), tensor([255, 216, 255,  ...,  63, 255, 217], dtype=torch.uint8), tensor([255, 216, 255,  ..., 132, 255, 217], dtype=torch.uint8), tensor([255, 216, 255,  ...,   3, 255, 217], dtype=torch.uint8), tensor([255, 216, 255,  ...,  15, 255, 217], dtype=torch.uint8), tensor([255, 216, 255,  ..., 129, 255, 217], dtype=torch.uint8), tensor([255, 216, 255,  ...,  63, 255, 217], dtype=torch.uint8), tensor([255, 216, 255,  ..., 103, 255, 217], dtype=torch.uint8), tensor([255, 216, 255,  ...,  63, 255, 217], dtype=torch.uint8), tensor([255, 216, 255,  ..., 159, 255, 217], dtype=torch.uint8), tensor([255, 216, 255,  ..., 207, 255, 217], dtype=torch.uint8), tensor([255, 216, 255,  ..., 159, 255, 217], dtype=torch.uint8), tensor([255, 216, 255,  ...,  49, 255, 217], dtype=torch.uint8), tensor([255, 216, 255,  ...,  51, 255, 217], dtype=torch.uint8), tensor([255, 216, 255,  ..., 127, 255, 217], dtype=torch.uint8), tensor([255, 216, 255,  ...,  71, 255, 217], dtype=torch.uint8), tensor([255, 216, 255,  ..., 127, 255, 217], dtype=torch.uint8), tensor([255, 216, 255,  ..., 127, 255, 217], dtype=torch.uint8), tensor([255, 216, 255,  ...,   3, 255, 217], dtype=torch.uint8), tensor([255, 216, 255,  ...,  31, 255, 217], dtype=torch.uint8), tensor([255, 216, 255,  ...,   3, 255, 217], dtype=torch.uint8), tensor([255, 216, 255,  ..., 207, 255, 217], dtype=torch.uint8), tensor([255, 216, 255,  ..., 103, 255, 217], dtype=torch.uint8), tensor([255, 216, 255,  ...,  63, 255, 217], dtype=torch.uint8), tensor([255, 216, 255,  ..., 127, 255, 217], dtype=torch.uint8), tensor([255, 216, 255,  ...,  63, 255, 217], dtype=torch.uint8), tensor([255, 216, 255,  ..., 159, 255, 217], dtype=torch.uint8), tensor([255, 216, 255,  ..., 127, 255, 217], dtype=torch.uint8), tensor([255, 216, 255,  ..., 127, 255, 217], dtype=torch.uint8), tensor([255, 216, 255,  ...,  51, 255, 217], dtype=torch.uint8), tensor([255, 216, 255,  ...,  71, 255, 217], dtype=torch.uint8), tensor([255, 216, 255,  ..., 207, 255, 217], dtype=torch.uint8), tensor([255, 216, 255,  ...,  63, 255, 217], dtype=torch.uint8), tensor([255, 216, 255,  ..., 127, 255, 217], dtype=torch.uint8), tensor([255, 216, 255,  ..., 207, 255, 217], dtype=torch.uint8), tensor([255, 216, 255,  ..., 103, 255, 217], dtype=torch.uint8), tensor([255, 216, 255,  ..., 207, 255, 217], dtype=torch.uint8), tensor([255, 216, 255,  ..., 236, 255, 217], dtype=torch.uint8), tensor([255, 216, 255,  ..., 236, 255, 217], dtype=torch.uint8), tensor([255, 216, 255,  ...,  31, 255, 217], dtype=torch.uint8), tensor([255, 216, 255,  ...,  31, 255, 217], dtype=torch.uint8), tensor([255, 216, 255,  ...,   1, 255, 217], dtype=torch.uint8), tensor([255, 216, 255,  ...,   7, 255, 217], dtype=torch.uint8), tensor([255, 216, 255,  ...,  31, 255, 217], dtype=torch.uint8), tensor([255, 216, 255,  ...,   7, 255, 217], dtype=torch.uint8), tensor([255, 216, 255,  ...,  15, 255, 217], dtype=torch.uint8), tensor([255, 216, 255,  ..., 135, 255, 217], dtype=torch.uint8), tensor([255, 216, 255,  ..., 135, 255, 217], dtype=torch.uint8), tensor([255, 216, 255,  ...,  63, 255, 217], dtype=torch.uint8), tensor([255, 216, 255,  ...,  31, 255, 217], dtype=torch.uint8), tensor([255, 216, 255,  ..., 127, 255, 217], dtype=torch.uint8), tensor([255, 216, 255,  ...,  17, 255, 217], dtype=torch.uint8), tensor([255, 216, 255,  ...,  63, 255, 217], dtype=torch.uint8), tensor([255, 216, 255,  ...,  63, 255, 217], dtype=torch.uint8), tensor([255, 216, 255,  ..., 159, 255, 217], dtype=torch.uint8), tensor([255, 216, 255,  ..., 153, 255, 217], dtype=torch.uint8), tensor([255, 216, 255,  ...,  51, 255, 217], dtype=torch.uint8), tensor([255, 216, 255,  ..., 127, 255, 217], dtype=torch.uint8), tensor([255, 216, 255,  ..., 159, 255, 217], dtype=torch.uint8), tensor([255, 216, 255,  ...,  51, 255, 217], dtype=torch.uint8), tensor([255, 216, 255,  ..., 127, 255, 217], dtype=torch.uint8), tensor([255, 216, 255,  ..., 132, 255, 217], dtype=torch.uint8), tensor([255, 216, 255,  ...,  71, 255, 217], dtype=torch.uint8), tensor([255, 216, 255,  ..., 103, 255, 217], dtype=torch.uint8), tensor([255, 216, 255,  ..., 159, 255, 217], dtype=torch.uint8), tensor([255, 216, 255,  ...,  31, 255, 217], dtype=torch.uint8), tensor([255, 216, 255,  ..., 159, 255, 217], dtype=torch.uint8), tensor([255, 216, 255,  ..., 127, 255, 217], dtype=torch.uint8), tensor([255, 216, 255,  ...,  15, 255, 217], dtype=torch.uint8), tensor([255, 216, 255,  ..., 143, 255, 217], dtype=torch.uint8), tensor([255, 216, 255,  ...,  71, 255, 217], dtype=torch.uint8), tensor([255, 216, 255,  ...,  35, 255, 217], dtype=torch.uint8), tensor([255, 216, 255,  ...,  71, 255, 217], dtype=torch.uint8), tensor([255, 216, 255,  ...,  76, 255, 217], dtype=torch.uint8), tensor([255, 216, 255,  ..., 103, 255, 217], dtype=torch.uint8), tensor([255, 216, 255,  ...,  63, 255, 217], dtype=torch.uint8), tensor([255, 216, 255,  ..., 185, 255, 217], dtype=torch.uint8), tensor([255, 216, 255,  ..., 207, 255, 217], dtype=torch.uint8), tensor([255, 216, 255,  ..., 159, 255, 217], dtype=torch.uint8), tensor([255, 216, 255,  ...,  63, 255, 217], dtype=torch.uint8), tensor([255, 216, 255,  ..., 131, 255, 217], dtype=torch.uint8), tensor([255, 216, 255,  ..., 127, 255, 217], dtype=torch.uint8), tensor([255, 216, 255,  ..., 127, 255, 217], dtype=torch.uint8), tensor([255, 216, 255,  ..., 179, 255, 217], dtype=torch.uint8), tensor([255, 216, 255,  ..., 179, 255, 217], dtype=torch.uint8), tensor([255, 216, 255,  ..., 207, 255, 217], dtype=torch.uint8), tensor([255, 216, 255,  ..., 179, 255, 217], dtype=torch.uint8), tensor([255, 216, 255,  ..., 127, 255, 217], dtype=torch.uint8), tensor([255, 216, 255,  ..., 143, 255, 217], dtype=torch.uint8), tensor([255, 216, 255,  ..., 241, 255, 217], dtype=torch.uint8), tensor([255, 216, 255,  ...,  51, 255, 217], dtype=torch.uint8), tensor([255, 216, 255,  ..., 135, 255, 217], dtype=torch.uint8), tensor([255, 216, 255,  ...,  15, 255, 217], dtype=torch.uint8), tensor([255, 216, 255,  ..., 160, 255, 217], dtype=torch.uint8), tensor([255, 216, 255,  ..., 108, 255, 217], dtype=torch.uint8), tensor([255, 216, 255,  ..., 159, 255, 217], dtype=torch.uint8), tensor([255, 216, 255,  ..., 159, 255, 217], dtype=torch.uint8), tensor([255, 216, 255,  ...,   9, 255, 217], dtype=torch.uint8), tensor([255, 216, 255,  ...,  15, 255, 217], dtype=torch.uint8), tensor([255, 216, 255,  ...,  31, 255, 217], dtype=torch.uint8), tensor([255, 216, 255,  ...,  64, 255, 217], dtype=torch.uint8), tensor([255, 216, 255,  ...,  31, 255, 217], dtype=torch.uint8), tensor([255, 216, 255,  ...,  63, 255, 217], dtype=torch.uint8), tensor([255, 216, 255,  ...,  15, 255, 217], dtype=torch.uint8), tensor([255, 216, 255,  ...,  63, 255, 217], dtype=torch.uint8), tensor([255, 216, 255,  ...,  31, 255, 217], dtype=torch.uint8), tensor([255, 216, 255,  ...,  15, 255, 217], dtype=torch.uint8), tensor([255, 216, 255,  ...,  31, 255, 217], dtype=torch.uint8), tensor([255, 216, 255,  ...,  63, 255, 217], dtype=torch.uint8), tensor([255, 216, 255,  ..., 129, 255, 217], dtype=torch.uint8), tensor([255, 216, 255,  ..., 192, 255, 217], dtype=torch.uint8), tensor([255, 216, 255,  ...,  31, 255, 217], dtype=torch.uint8), tensor([255, 216, 255,  ..., 135, 255, 217], dtype=torch.uint8), tensor([255, 216, 255,  ...,  63, 255, 217], dtype=torch.uint8), tensor([255, 216, 255,  ...,  51, 255, 217], dtype=torch.uint8), tensor([255, 216, 255,  ...,  51, 255, 217], dtype=torch.uint8), tensor([255, 216, 255,  ...,  63, 255, 217], dtype=torch.uint8), tensor([255, 216, 255,  ..., 208, 255, 217], dtype=torch.uint8), tensor([255, 216, 255,  ...,  31, 255, 217], dtype=torch.uint8), tensor([255, 216, 255,  ...,  63, 255, 217], dtype=torch.uint8), tensor([255, 216, 255,  ...,  63, 255, 217], dtype=torch.uint8), tensor([255, 216, 255,  ...,  97, 255, 217], dtype=torch.uint8), tensor([255, 216, 255,  ..., 176, 255, 217], dtype=torch.uint8), tensor([255, 216, 255,  ...,  15, 255, 217], dtype=torch.uint8), tensor([255, 216, 255,  ...,  19, 255, 217], dtype=torch.uint8), tensor([255, 216, 255,  ...,  19, 255, 217], dtype=torch.uint8), tensor([255, 216, 255,  ...,   9, 255, 217], dtype=torch.uint8), tensor([255, 216, 255,  ..., 129, 255, 217], dtype=torch.uint8), tensor([255, 216, 255,  ...,  63, 255, 217], dtype=torch.uint8), tensor([255, 216, 255,  ..., 163, 255, 217], dtype=torch.uint8), tensor([255, 216, 255,  ..., 207, 255, 217], dtype=torch.uint8), tensor([255, 216, 255,  ..., 220, 255, 217], dtype=torch.uint8), tensor([255, 216, 255,  ..., 127, 255, 217], dtype=torch.uint8), tensor([255, 216, 255,  ...,  99, 255, 217], dtype=torch.uint8), tensor([255, 216, 255,  ..., 143, 255, 217], dtype=torch.uint8), tensor([255, 216, 255,  ...,  15, 255, 217], dtype=torch.uint8), tensor([255, 216, 255,  ..., 179, 255, 217], dtype=torch.uint8), tensor([255, 216, 255,  ..., 207, 255, 217], dtype=torch.uint8), tensor([255, 216, 255,  ...,  63, 255, 217], dtype=torch.uint8), tensor([255, 216, 255,  ...,  35, 255, 217], dtype=torch.uint8), tensor([255, 216, 255,  ..., 127, 255, 217], dtype=torch.uint8), tensor([255, 216, 255,  ..., 127, 255, 217], dtype=torch.uint8), tensor([255, 216, 255,  ..., 153, 255, 217], dtype=torch.uint8), tensor([255, 216, 255,  ...,  63, 255, 217], dtype=torch.uint8), tensor([255, 216, 255,  ...,  63, 255, 217], dtype=torch.uint8), tensor([255, 216, 255,  ..., 236, 255, 217], dtype=torch.uint8), tensor([255, 216, 255,  ...,  63, 255, 217], dtype=torch.uint8), tensor([255, 216, 255,  ..., 127, 255, 217], dtype=torch.uint8), tensor([255, 216, 255,  ..., 159, 255, 217], dtype=torch.uint8), tensor([255, 216, 255,  ...,  63, 255, 217], dtype=torch.uint8), tensor([255, 216, 255,  ...,  63, 255, 217], dtype=torch.uint8), tensor([255, 216, 255,  ..., 103, 255, 217], dtype=torch.uint8), tensor([255, 216, 255,  ...,   7, 255, 217], dtype=torch.uint8), tensor([255, 216, 255,  ..., 127, 255, 217], dtype=torch.uint8), tensor([255, 216, 255,  ...,   7, 255, 217], dtype=torch.uint8), tensor([255, 216, 255,  ...,  15, 255, 217], dtype=torch.uint8), tensor([255, 216, 255,  ..., 103, 255, 217], dtype=torch.uint8), tensor([255, 216, 255,  ..., 159, 255, 217], dtype=torch.uint8), tensor([255, 216, 255,  ...,  63, 255, 217], dtype=torch.uint8), tensor([255, 216, 255,  ..., 159, 255, 217], dtype=torch.uint8), tensor([255, 216, 255,  ...,  35, 255, 217], dtype=torch.uint8), tensor([255, 216, 255,  ...,  31, 255, 217], dtype=torch.uint8), tensor([255, 216, 255,  ..., 103, 255, 217], dtype=torch.uint8), tensor([255, 216, 255,  ...,  63, 255, 217], dtype=torch.uint8), tensor([255, 216, 255,  ..., 159, 255, 217], dtype=torch.uint8), tensor([255, 216, 255,  ..., 127, 255, 217], dtype=torch.uint8), tensor([255, 216, 255,  ...,  31, 255, 217], dtype=torch.uint8), tensor([255, 216, 255,  ...,  15, 255, 217], dtype=torch.uint8), tensor([255, 216, 255,  ...,   3, 255, 217], dtype=torch.uint8), tensor([255, 216, 255,  ..., 159, 255, 217], dtype=torch.uint8), tensor([255, 216, 255,  ...,  79, 255, 217], dtype=torch.uint8), tensor([255, 216, 255,  ...,   7, 255, 217], dtype=torch.uint8), tensor([255, 216, 255,  ...,   7, 255, 217], dtype=torch.uint8), tensor([255, 216, 255,  ...,  64, 255, 217], dtype=torch.uint8), tensor([255, 216, 255,  ..., 127, 255, 217], dtype=torch.uint8), tensor([255, 216, 255,  ...,  15, 255, 217], dtype=torch.uint8), tensor([255, 216, 255,  ...,   3, 255, 217], dtype=torch.uint8), tensor([255, 216, 255,  ..., 129, 255, 217], dtype=torch.uint8), tensor([255, 216, 255,  ..., 159, 255, 217], dtype=torch.uint8), tensor([255, 216, 255,  ..., 159, 255, 217], dtype=torch.uint8), tensor([255, 216, 255,  ..., 156, 255, 217], dtype=torch.uint8), tensor([255, 216, 255,  ..., 115, 255, 217], dtype=torch.uint8), tensor([255, 216, 255,  ..., 231, 255, 217], dtype=torch.uint8), tensor([255, 216, 255,  ..., 156, 255, 217], dtype=torch.uint8), tensor([255, 216, 255,  ..., 207, 255, 217], dtype=torch.uint8), tensor([255, 216, 255,  ...,  51, 255, 217], dtype=torch.uint8), tensor([255, 216, 255,  ...,  63, 255, 217], dtype=torch.uint8), tensor([255, 216, 255,  ...,  17, 255, 217], dtype=torch.uint8), tensor([255, 216, 255,  ..., 127, 255, 217], dtype=torch.uint8), tensor([255, 216, 255,  ..., 207, 255, 217], dtype=torch.uint8), tensor([255, 216, 255,  ..., 127, 255, 217], dtype=torch.uint8), tensor([255, 216, 255,  ..., 127, 255, 217], dtype=torch.uint8), tensor([255, 216, 255,  ...,  63, 255, 217], dtype=torch.uint8), tensor([255, 216, 255,  ...,  79, 255, 217], dtype=torch.uint8), tensor([255, 216, 255,  ...,  44, 255, 217], dtype=torch.uint8), tensor([255, 216, 255,  ..., 159, 255, 217], dtype=torch.uint8), tensor([255, 216, 255,  ...,  51, 255, 217], dtype=torch.uint8), tensor([255, 216, 255,  ..., 127, 255, 217], dtype=torch.uint8), tensor([255, 216, 255,  ..., 127, 255, 217], dtype=torch.uint8), tensor([255, 216, 255,  ...,  76, 255, 217], dtype=torch.uint8)], 

'key': 'db92831e45859439'

}



